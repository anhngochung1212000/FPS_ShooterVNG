//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity moveInputEntity { get { return GetGroup(InputMatcher.MoveInput).GetSingleEntity(); } }
    public MoveInputComponent moveInput { get { return moveInputEntity.moveInput; } }
    public bool hasMoveInput { get { return moveInputEntity != null; } }

    public InputEntity SetMoveInput(UnityEngine.Vector2 newValue) {
        if (hasMoveInput) {
            throw new Entitas.EntitasException("Could not set MoveInput!\n" + this + " already has an entity with MoveInputComponent!",
                "You should check if the context already has a moveInputEntity before setting it or use context.ReplaceMoveInput().");
        }
        var entity = CreateEntity();
        entity.AddMoveInput(newValue);
        return entity;
    }

    public void ReplaceMoveInput(UnityEngine.Vector2 newValue) {
        var entity = moveInputEntity;
        if (entity == null) {
            entity = SetMoveInput(newValue);
        } else {
            entity.ReplaceMoveInput(newValue);
        }
    }

    public void RemoveMoveInput() {
        moveInputEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public MoveInputComponent moveInput { get { return (MoveInputComponent)GetComponent(InputComponentsLookup.MoveInput); } }
    public bool hasMoveInput { get { return HasComponent(InputComponentsLookup.MoveInput); } }

    public void AddMoveInput(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.MoveInput;
        var component = (MoveInputComponent)CreateComponent(index, typeof(MoveInputComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMoveInput(UnityEngine.Vector2 newValue) {
        var index = InputComponentsLookup.MoveInput;
        var component = (MoveInputComponent)CreateComponent(index, typeof(MoveInputComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMoveInput() {
        RemoveComponent(InputComponentsLookup.MoveInput);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherMoveInput;

    public static Entitas.IMatcher<InputEntity> MoveInput {
        get {
            if (_matcherMoveInput == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.MoveInput);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherMoveInput = matcher;
            }

            return _matcherMoveInput;
        }
    }
}
